{"ast":null,"code":"var _jsxFileName = \"/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginForm/index.js\";\nimport { Component } from 'react';\nimport Cookies from 'js-cookie';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      username: '',\n      password: '',\n      showSubmitError: false,\n      errorMsg: ''\n    };\n\n    this.onChangeUsername = event => {\n      this.setState({\n        username: event.target.value\n      });\n    };\n\n    this.onChangePassword = event => {\n      this.setState({\n        password: event.target.value\n      });\n    };\n\n    this.onSubmitSuccess = jwtToken => {\n      const {\n        history\n      } = this.props;\n      Cookies.set('jwt_token', jwtToken, {\n        expires: 30,\n        path: '/'\n      });\n      history.replace('/');\n    };\n\n    this.onSubmitFailure = errorMsg => {\n      console.log(errorMsg);\n      this.setState({\n        showSubmitError: true,\n        errorMsg\n      });\n    };\n\n    this.submitForm = async event => {\n      event.preventDefault();\n      const {\n        username,\n        password\n      } = this.state;\n      const userDetails = {\n        username,\n        password\n      };\n      const url = 'https://apis.ccbp.in/login';\n      const options = {\n        method: 'POST',\n        body: JSON.stringify(userDetails)\n      };\n      const response = await fetch(url, options);\n      const data = await response.json();\n\n      if (response.ok === true) {\n        this.onSubmitSuccess(data.jwt_token);\n      } else {\n        this.onSubmitFailure(data.error_msg);\n      }\n    };\n\n    this.renderPasswordField = () => {\n      const {\n        password\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"password\",\n          children: \"PASSWORD\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          id: \"password\",\n          className: \"password-input-field\",\n          value: password,\n          onChange: this.onChangePassword\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n\n    this.renderUsernameField = () => {\n      const {\n        username\n      } = this.state;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"input-label\",\n          htmlFor: \"username\",\n          children: \"USERNAME\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          id: \"username\",\n          className: \"username-input-field\",\n          value: username,\n          onChange: this.onChangeUsername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true);\n    };\n  }\n\n  render() {\n    const {\n      showSubmitError,\n      errorMsg\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-form-container\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        className: \"form-container\",\n        onSubmit: this.submitForm,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: this.renderUsernameField()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-container\",\n          children: this.renderPasswordField()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), showSubmitError && /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"error-message\",\n          children: [\"*\", errorMsg]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 31\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/home/workspace/reactjs/coding-practices/nxtWatchApp/src/components/LoginForm/index.js"],"names":["Component","Cookies","LoginForm","state","username","password","showSubmitError","errorMsg","onChangeUsername","event","setState","target","value","onChangePassword","onSubmitSuccess","jwtToken","history","props","set","expires","path","replace","onSubmitFailure","console","log","submitForm","preventDefault","userDetails","url","options","method","body","JSON","stringify","response","fetch","data","json","ok","jwt_token","error_msg","renderPasswordField","renderUsernameField","render"],"mappings":"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","sourcesContent":["import {Component} from 'react'\nimport Cookies from 'js-cookie'\n\nimport './index.css'\n\nclass LoginForm extends Component {\n  state = {\n    username: '',\n    password: '',\n    showSubmitError: false,\n    errorMsg: '',\n  }\n\n  onChangeUsername = event => {\n    this.setState({username: event.target.value})\n  }\n\n  onChangePassword = event => {\n    this.setState({password: event.target.value})\n  }\n\n  onSubmitSuccess = jwtToken => {\n    const {history} = this.props\n\n    Cookies.set('jwt_token', jwtToken, {\n      expires: 30,\n      path: '/',\n    })\n    history.replace('/')\n  }\n\n  onSubmitFailure = errorMsg => {\n    console.log(errorMsg)\n    this.setState({showSubmitError: true, errorMsg})\n  }\n\n  submitForm = async event => {\n    event.preventDefault()\n    const {username, password} = this.state\n    const userDetails = {username, password}\n    const url = 'https://apis.ccbp.in/login'\n    const options = {\n      method: 'POST',\n      body: JSON.stringify(userDetails),\n    }\n    const response = await fetch(url, options)\n    const data = await response.json()\n    if (response.ok === true) {\n      this.onSubmitSuccess(data.jwt_token)\n    } else {\n      this.onSubmitFailure(data.error_msg)\n    }\n  }\n\n  renderPasswordField = () => {\n    const {password} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"password\">\n          PASSWORD\n        </label>\n        <input\n          type=\"password\"\n          id=\"password\"\n          className=\"password-input-field\"\n          value={password}\n          onChange={this.onChangePassword}\n        />\n      </>\n    )\n  }\n\n  renderUsernameField = () => {\n    const {username} = this.state\n    return (\n      <>\n        <label className=\"input-label\" htmlFor=\"username\">\n          USERNAME\n        </label>\n        <input\n          type=\"text\"\n          id=\"username\"\n          className=\"username-input-field\"\n          value={username}\n          onChange={this.onChangeUsername}\n        />\n      </>\n    )\n  }\n\n  render() {\n    const {showSubmitError, errorMsg} = this.state\n\n    return (\n      <div className=\"login-form-container\">\n        <form className=\"form-container\" onSubmit={this.submitForm}>\n          <div className=\"input-container\">{this.renderUsernameField()}</div>\n          <div className=\"input-container\">{this.renderPasswordField()}</div>\n          <button type=\"submit\" className=\"login-button\">\n            Login\n          </button>\n          {showSubmitError && <p className=\"error-message\">*{errorMsg}</p>}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default LoginForm\n"]},"metadata":{},"sourceType":"module"}